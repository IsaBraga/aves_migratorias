library (SDMTools)
library (raster)
library (dismo)
library (rgdal)
library(maptools)
library(outliers)
library(rgeos)

source("breeding_birds.R")
source("eliminate_outlier.R") #23 variaveis climáticas para as áreas não-reprodutivas e de reprodução e 19 variaveis para as áreas de residância
source("reclass.R") # corte de adequabilidade com menor Erro = omissão *2+sobreprevisão

#objetos necessários
clima_JJA<-dir(pattern="JJA.grd")
clima_DJF<-dir(pattern="DJF.grd")
clima_anual<-dir(patter="_anual.grd")
shapes<-dir(pattern=".shp") #polígonos das 78 espécies
sudamerica<-raster("sudamerica.grd")
northamerica<-raster("northamerica.grd")
america_rst0<-raster("america_rst0.grd")
nomes_linhas_modelo4<-read.table("nomes_linhas_modelo4.txt", h=F) #nomes dos modelos climáticos presente (0k) e futuro (RCP's2.6 e 8.5): 57 linhas
spp_hem<-read.table("spp_hem_modelo4.txt", h=TRUE) #variáveis climáticas a serem utilizadas para cada espécie


###Funcao###

run_Bioclim_model<-function(shapes, clima_JJA, clima_DJF, clima_anual){
  resultados_spp<- array(dim=c(57,17,77))
  dimnames(resultados_spp)[[3]]<-gsub(".shp", "", shapes)
  dimnames(resultados_spp)[[2]]<-c("long_min","lat","long_max","lat","midpoint_x", "midpoint_y","n_cells", "prop_acerto", 
                                   "prop_sobrepredicao", "range_ganho", "range_perdido", "range_mantido", 
                                   "n_cel_subpre", "n_cel_sobrep", "n_cel_acerto1", "n_cel_acerto0", "adequabil_corte")
  dimnames(resultados_spp)[[1]]<-nomes_linhas_modelo4[,1]
  
  Sraster_rep0k<-stack(america_rst0, america_rst0, america_rst0, america_rst0, america_rst0, america_rst0)
  Sraster_rep26<- Sraster_rep0k
  Sraster_rep85<- Sraster_rep0k
  
  Sraster_inv0k<-Sraster_rep0k
  Sraster_inv26<-Sraster_rep0k
  Sraster_inv85<-Sraster_rep0k
  
  Sraster_res0k<-Sraster_rep0k
  Sraster_res26<-Sraster_rep0k
  Sraster_res85<-Sraster_rep0k
  
  for(i in 1:length(shapes)){
    paxaro<- readShapePoly (shapes[i], delete_null_obj=TRUE)
    reproduccion<-breeding_birds(paxaro)
    if(!is.null(reproduccion)){
      reproduccion<-gUnaryUnion(reproduccion)}
    invernada<- nonbreeding_birds(paxaro) 
    if(!is.null(invernada)){
      invernada<-gUnaryUnion(invernada)}
    residencia<-resident_birds(paxaro)
    if(!is.null(residencia)){
      residencia<-gUnaryUnion(residencia)} 
    print(shapes[i])
    
    # latitude e longitude min e max dos shapes
    if(!is.null(reproduccion)){
      reproduccion_rst<-rasterize(reproduccion, americas_rst)
      reproduccion_point<-rasterToPoints(reproduccion_rst)
      if(nrow(reproduccion_point)>0){
        resultados_spp[1,c(1:4),i]<- c(apply(reproduccion_point[,c(1:2)], 2, min),apply(reproduccion_point[,c(1:2)], 2, max))
        resultados_spp[1,7,i]<-nrow(reproduccion_point)
        resultados_spp[1,c(5,6),i]<- apply(reproduccion_point[,c(1:2)],2,median)
      }    
    }
    
    if(!is.null(invernada)){
      invernada_rst<-rasterize(invernada, americas_rst )
      invernada_point<-rasterToPoints(invernada_rst)
      if(nrow(invernada_point)>0){
        resultados_spp[2,c(1:4),i]<- c(apply(invernada_point[,c(1:2)], 2, min),apply(invernada_point[,c(1:2)], 2, max))
        resultados_spp[2,7,i]<-nrow(invernada_point)
        resultados_spp[2,c(5,6),i]<- apply(invernada_point[,c(1:2)],2,median)
      }
    }
    
    
    if(!is.null(residencia) ){
      residencia_rst<-rasterize(residencia, americas_rst )
      residencia_point<-rasterToPoints(residencia_rst)
      if(nrow(residencia_point)>0){
        resultados_spp[3,c(1:4),i]<- c(apply(residencia_point[,c(1:2)], 2, min),apply(residencia_point[,c(1:2)], 2, max))
        resultados_spp[3,7,i]<-nrow(residencia_point)
        resultados_spp[3,c(5,6),i]<- apply(residencia_point[,c(1:2)],2,median)
      }
    }
    
    ### Modelos climaticos ###
    clima<-cbind(clima_JJA, clima_DJF, clima_anual)
    
    if (is.na(spp_hem[i,2])){ 
      clima_inv<-clima[,1]
      clima_res<-clima[,3]      
    }
    
    if(spp_hem[i,2]=="sul" & !is.na(spp_hem[i,2])){ 
      clima_rep<-clima[,2]
      clima_inv<-clima[,1]
      clima_res<-clima[,3]
      recorte<-sudamerica
    }
    if(spp_hem[i,2]=="sul_norte" & !is.na(spp_hem[i,2])){ 
      clima_rep<-clima[,2]
      clima_inv<-clima[,1]
      clima_res<-clima[,3]
      recorte<-america_rst0
    }
    
    if(spp_hem[i,2]=="norte" & !is.na(spp_hem[i,2])){ 
      clima_rep<-clima[,1]
      clima_inv<-clima[,2]
      clima_res<-clima[,3]    
      recorte<-northamerica
    }
    
    
    
    for(j in 1:nrow(clima)){
      
      # modelo area de reproducao #
      if(!is.null(reproduccion)){
        if(nrow(reproduccion_point)>0){
          clima_reproducao<-brick(clima_rep[j])
          
          #0k
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_rep[j]),"_", "0k","REP", sep=""))
          
          # nicho climatico
          reproduccion_rst2<-merge(crop(reproduccion_rst, recorte), recorte)
          data_new_rep<-eliminate_outliers(climate=clima_reproducao, distribution=reproduccion)
          map_rep<- bioclim (data_new_rep)
          rep_model<-predict(clima_reproducao[[c(1:23)]], map_rep)
          adequab_rep <- optimise(reclass_rep, interval = c(0,max(rep_model@data@values, na.rm=T)), obj_model=rep_model, 
                                  shape_rst=reproduccion_rst2, cortar_rep=recorte)$minimum
          
          final_rep0k<-crop(reclassify(rep_model, c(0,adequab_rep,0,adequab_rep,+Inf,1))*2, recorte)
          
          ## validacao area de reproducao
          validate_repro<-reproduccion_rst2+final_rep0k
          #performance do modelo
          resultados_spp[(j-1)*9+4,8,i]<- length(which(validate_repro@data@values==3))/length(which(reproduccion_rst2@data@values==1)) #% acerto
          resultados_spp[(j-1)*9+4,9,i]<- length(which(validate_repro@data@values==2))/length(which(reproduccion_rst2@data@values==1)) #% sobrepredicao
          resultados_spp[(j-1)*9+4,13,i]<-length(which(validate_repro@data@values==1)) #n_cel_subpre
          resultados_spp[(j-1)*9+4,14,i]<-length(which(validate_repro@data@values==2)) #n_cel_sobrep
          resultados_spp[(j-1)*9+4,15,i]<-length(which(validate_repro@data@values==3)) #n_cel_acerto1
          resultados_spp[(j-1)*9+4,16,i]<-21014-(length(which(validate_repro@data@values==1))+length(which(validate_repro@data@values==2))+length(which(validate_repro@data@values==3))) #n_cel_acerto0  
          
          resultados_spp[(j-1)*9+4,17,i]<- adequab_rep
          
          # localizaçao, centroide e area
          rep_model_point<-rasterToPoints(final_rep0k)
          rep_model_point<-matrix(rep_model_point[rep_model_point[,3]==2,1:2],ncol=2)
          
          if(nrow(rep_model_point)>0){
            resultados_spp[(j-1)*9+4,c(1:4),i]<- c(apply(rep_model_point, 2, min),apply(rep_model_point, 2, max)) #lat e long max e min
            resultados_spp[(j-1)*9+4,c(5,6),i]<- apply(rep_model_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+4,7,i]<-length(which(final_rep0k@data@values==2)) #area do modelo
          
          #raster riqueza
          Sraster_rep0k@layers[[j]]<-(merge(final_rep0k/2, america_rst0))+Sraster_rep0k@layers[[j]]
          
          
          # predict rcp 26    
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_rep[j]), "_","26","REP", sep=""))  
          
          clima_26rep<-clima_reproducao[[24:46]]
          names(clima_26rep)<-names(clima_reproducao[[1:23]])
          rep_model26<-predict(map_rep,clima_26rep)
          final_rep26<-crop(reclassify(rep_model26, c(0,adequab_rep,0,adequab_rep,+Inf,1))*2, recorte)
          
          #localizaçao, centroide e area
          rep_model26_point<-rasterToPoints(final_rep26)
          rep_model26_point<-matrix(rep_model26_point[rep_model26_point[,3]==2,c(1:2)],ncol=2)
          
          if(nrow(rep_model26_point)>0){
            resultados_spp[(j-1)*9+5,c(1:4),i]<- c(apply(rep_model26_point, 2, min),apply(rep_model26_point, 2, max)) #lat e long max e min
            resultados_spp[(j-1)*9+5,c(5,6),i]<- apply(rep_model26_point,2,median) #centroide 
          }
          resultados_spp[(j-1)*9+5,7,i]<-length(which(final_rep26@data@values==1)) # area
          
          #sobreposicao do range 26 x 0k
          sobreposicao_rep26<-final_rep0k+final_rep26
          resultados_spp[(j-1)*9+5,10,i]<-length(which(sobreposicao_rep26@data@values==1))/length(which(final_rep0k@data@values==2))
          resultados_spp[(j-1)*9+5,11,i]<-length(which(sobreposicao_rep26@data@values==2))/length(which(final_rep0k@data@values==2))
          resultados_spp[(j-1)*9+5,12,i]<-length(which(sobreposicao_rep26@data@values==3))/length(which(final_rep0k@data@values==2))
          
          #raster riqueza
          Sraster_rep26@layers[[j]]<-(merge(final_rep26, america_rst0))+Sraster_rep26@layers[[j]]
          
          
          
          # predict rcp 85
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_rep[j]), "_","85","REP", sep=""))
          
          clima_85rep<-clima_reproducao[[47:69]]
          names(clima_85rep)<-names(clima_reproducao[[1:23]])
          rep_model85<-predict(map_rep,clima_85rep)
          final_rep85<-crop(reclassify(rep_model85, c(0,adequab_rep,0,adequab_rep,+Inf,1))*2, recorte)
          
          #sobreposicao do range 85 x 0k
          sobreposicao_rep85<-final_rep0k+final_rep85
          resultados_spp[(j-1)*9+6,10,i]<-length(which(sobreposicao_rep85@data@values==1))/length(which(final_rep0k@data@values==2))
          resultados_spp[(j-1)*9+6,11,i]<-length(which(sobreposicao_rep85@data@values==2))/length(which(final_rep0k@data@values==2))
          resultados_spp[(j-1)*9+6,12,i]<-length(which(sobreposicao_rep85@data@values==3))/length(which(final_rep0k@data@values==2))
          
          # localizaçao, centroide e area
          rep_model85_point<-rasterToPoints(rep_model85)
          rep_model85_point<-matrix(rep_model85_point[rep_model85_point[,3]==1,c(1:2)], ncol=2)
          
          if(nrow(rep_model85_point)>0){
            resultados_spp[(j-1)*9+6,c(1:4),i]<- c(apply(rep_model85_point, 2, min),apply(rep_model85_point, 2, max)) #lat e long max e min
            resultados_spp[(j-1)*9+6,c(5,6),i]<- apply(rep_model85_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+6,7,i]<-length(which(final_rep85@data@values==1)) #area
          
          #raster riqueza
          Sraster_rep85@layers[[j]]<-(merge(final_rep85, america_rst0))+Sraster_rep85@layers[[j]]
          
          
          writeRaster(stack(rep_model0k, rep_model26, rep_model85), paste("./mapas/", gsub(".shp", "", shapes[i]), "_",gsub(".grd", "", clima_rep[j]), "_","REP", sep=""),overwrite=TRUE)
         
          rm(clima_reproducao, reproduccion_rst2, data_new_rep, map_rep, rep_model, adequab_rep, final_rep0k, validate_repro, rep_model_point,
             clima_26rep, rep_model26,final_rep26, rep_model26_point, clima_85rep,  rep_model85, final_rep85, rep_model85_point)
        }
      }
      
            
      
      ##### Modelo area de invernada #####
      if(!is.null(invernada)){
        if( nrow(invernada_point)>0){
          clima_invernada<-brick(clima_inv[j])   
          
          # 0k
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_inv[j]),"_","0k","INV", sep=""))
          
          # nicho climatico
          invernada_rst2<-merge(invernada_rst,america_rst0)
          data_new_inv<-eliminate_outliers(climate=clima_invernada, distribution=invernada)
          map_inv<- bioclim (data_new_inv)
          inv_model<-predict(map_inv,clima_invernada[[1:23]])
          adequab_inv <- optimise(reclass,interval = c(0,max(inv_model@data@values, na.rm=T)),obj_model=inv_model,shape_rst=invernada_rst2, cortar=america_rst0)$minimum
          final_inv0k<-crop(reclassify(inv_model, c(0,adequab_inv,0,adequab_inv,+Inf,1))*2, america_rst0)
          
          # validacao area de invernada
          validate_inv<-invernada_rst2+final_inv0k
          # performance do modelo: acertos e sobrepredicao
          resultados_spp[(j-1)*9+7,8,i]<- length(which(validate_inv@data@values==3))/length(which(invernada_rst2@data@values==1)) #% acerto
          resultados_spp[(j-1)*9+7,9,i]<- length(which(validate_inv@data@values==2))/length(which(invernada_rst2@data@values==1)) #% sobrepredicao
          resultados_spp[(j-1)*9+7,13,i]<-length(which(validate_inv@data@values==1)) #n_cel_subpre
          resultados_spp[(j-1)*9+7,14,i]<-length(which(validate_inv@data@values==2)) #n_cel_sobrep
          resultados_spp[(j-1)*9+7,15,i]<-length(which(validate_inv@data@values==3)) #n_cel_acerto1
          resultados_spp[(j-1)*9+7,16,i]<-21014-(length(which(validate_inv@data@values==1))+length(which(validate_inv@data@values==2))+length(which(validate_inv@data@values==3))) #n_cel_acerto0 
          resultados_spp[(j-1)*9+7,17,i]<-adequab_inv
          
          # localizaçao, centroide e area
          inv_model_point<-rasterToPoints(final_inv0k)
          inv_model_point<-matrix(inv_model_point[inv_model_point[,3]==2,c(1:2)],ncol=2)
          
          if(nrow(inv_model_point)>0){
            resultados_spp[(j-1)*9+7,c(1:4),i]<- c(apply(inv_model_point, 2, min),apply(inv_model_point, 2, max)) #lat e long max e min
            resultados_spp[(j-1)*9+7,c(5,6),i]<- apply(inv_model_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+7,7,i]<-length(which(final_inv0k@data@values==2)) #area do modelo
          
                    
          #raster riqueza
          Sraster_inv0k@layers[[j]]<-(merge(inv_model0k/2, america_rst0))+Sraster_inv0k@layers[[j]]
          
          
          #predict rcp 26    
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_inv[j]), "_","26","INV", sep=""))
          
          clima_26inv<-clima_invernada[[24:46]]
          names(clima_26inv)<-names(clima_invernada[[1:23]])
          inv_model26<-predict(map_inv,clima_26inv)
          final_inv26<-crop(reclassify(inv_model26, c(0,adequab_inv,0,adequab_inv,+Inf,1))*2, america_rst0)
          
          inv_model26_point<-rasterToPoints(final_inv26)
          inv_model26_point<-matrix(inv_model26_point[inv_model26_point[,3]==2,c(1:2)],ncol=2)
          
          if(nrow(inv_model26_point)>0){
            resultados_spp[(j-1)*9+8,c(1:4),i]<- c(apply(inv_model26_point, 2, min),apply(inv_model26_point, 2, max)) #lat e long max e min
            resultados_spp[(j-1)*9+8,c(5,6),i]<- apply(inv_model26_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+8,7,i]<-length(which(final_inv26@data@values==1))
          
          #sobreposicao do range 26 x 0k
          sobreposicao_inv26<-final_inv0k+final_inv26
          resultados_spp[(j-1)*9+8,10,i]<-length(which(sobreposicao_inv26@data@values==1))/length(which(final_inv0k@data@values==2))
          resultados_spp[(j-1)*9+8,11,i]<-length(which(sobreposicao_inv26@data@values==2))/length(which(final_inv0k@data@values==2))
          resultados_spp[(j-1)*9+8,12,i]<-length(which(sobreposicao_inv26@data@values==3))/length(which(final_inv0k@data@values==2))
          
          #raster riqueza
          Sraster_inv26@layers[[j]]<-(merge(final_inv26, america_rst0))+Sraster_inv26@layers[[j]]
          
          
          
          #predict rcp 85
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_inv[j]), "_","85","INV", sep=""))
          
          clima_85inv<-clima_invernada[[47:69]]
          names(clima_85inv)<-names(clima_invernada[[1:23]])
          inv_model85<-predict(map_inv,clima_85inv)
          final_inv85<-crop(reclassify(inv_model85, c(0,adequab_inv,0,adequab_inv,+Inf,1))*2, america_rst0)
          
          inv_model85_point<-rasterToPoints(final_inv85)
          inv_model85_point<- matrix(inv_model85_point[inv_model85_point[,3]==2,c(1:2)], ncol=2)
          
          #sobreposicao do range 85 x 0k
          sobreposicao_inv85<-final_inv0k+final_inv85
          resultados_spp[(j-1)*9+9,10,i]<-length(which(sobreposicao_inv85@data@values==1))/length(which(final_inv0k@data@values==2))
          resultados_spp[(j-1)*9+9,11,i]<-length(which(sobreposicao_inv85@data@values==2))/length(which(final_inv0k@data@values==2))
          resultados_spp[(j-1)*9+9,12,i]<-length(which(sobreposicao_inv85@data@values==3))/length(which(final_inv0k@data@values==2))
          
          # localizaçao, centroide e area
          inv_model85_point<-rasterToPoints(final_inv85)
          inv_model85_point<- matrix(inv_model85_point[inv_model85_point[,3]==1,c(1:2)], ncol=2)
          
          if(nrow(inv_model85_point)>0){
            resultados_spp[(j-1)*9+9,c(1:4),i]<- c(apply(inv_model85_point, 2, min),apply(inv_model85_point, 2, max)) #lat e long max e min
            resultados_spp[(j-1)*9+9,c(5:6),i]<- apply(inv_model85_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+9,7,i]<-length(which(inv_model85@data@values==1)) #area
          
          #raster riqueza
          Sraster_inv85@layers[[j]]<-(merge(final_inv85, america_rst0))+Sraster_inv85@layers[[j]]
                    
          
          writeRaster(stack(final_inv0k, final_inv26, final_inv85), paste("./mapas/",gsub(".shp", "", shapes[i]), "_",gsub(".grd", "", clima_inv[j]), "_","INV", sep=""),overwrite=TRUE)
          rm(clima_invernada, invernada_rst2, data_new_inv, map_inv, inv_model, adequab_inv, final_inv0k, validate_inv, inv_model_point,
             clima_26inv, inv_model26,final_inv26, inv_model26_point, clima_85inv,  inv_model85, final_inv85, inv_model85_point)
        }
      }
      
      
      
      ##### modelo area de residencia #####
      if(!is.null(residencia)){
        if(nrow(residencia_point)>0){
          clima_residencia<-brick(clima_res[j])
          
          #0k
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_res[j]),"_", "0k","res", sep=""))
          
          # nicho climatico
          residencia_rst2<-merge(residencia_rst, america_rst0)
          data_new_res<-eliminate_outliers_res(climate=clima_residencia, distribution=residencia)
          map_res<- bioclim (data_new_res)
          res_model<-predict(clima_residencia[[c(1:19)]], map_res)
          adequab_res <- optimise(reclass,interval = c(0,max(res_model@data@values, na.rm=T)),obj_model=res_model,shape_rst=residencia_rst2, cortar=america_rst0)$minimum
          final_res0k<-crop(reclassify(res_model, c(0,adequab_res,0,adequab_res,+Inf,1))*2, america_rst0)
          
          # validacao area de residencia
          validate_resid<-residencia_rst2+final_res0k
          
          #performance do modelo
          resultados_spp[(j-1)*9+10,8,i]<- length(which(validate_resid@data@values==3))/length(which(residencia_rst2@data@values==1)) #% acerto
          resultados_spp[(j-1)*9+10,9,i]<- length(which(validate_resid@data@values==2))/length(which(residencia_rst2@data@values==1)) #% sobrepredicao
          resultados_spp[(j-1)*9+10,13,i]<-length(which(validate_resid@data@values==1)) #n_cel_subpre
          resultados_spp[(j-1)*9+10,14,i]<-length(which(validate_resid@data@values==2)) #n_cel_sobrep
          resultados_spp[(j-1)*9+10,15,i]<-length(which(validate_resid@data@values==3)) #n_cel_acerto1
          resultados_spp[(j-1)*9+10,16,i]<-21014-(length(which(validate_resid@data@values==1))+length(which(validate_resid@data@values==2))+length(which(validate_resid@data@values==3))) #n_cel_acerto0  
          
          
          
          # localizaçao, centroide e area
          res_model_point<-rasterToPoints(final_res0k)
          res_model_point<-matrix(res_model_point[res_model_point[,3]==2,1:2], ncol=2)
          
          if(nrow(res_model_point)>0){
            resultados_spp[(j-1)*9+10,c(1:4),i]<- c(apply(res_model_point, 2, min),apply(res_model_point, 2, max))#lat e long max e min
            resultados_spp[(j-1)*9+10,c(5,6),i]<- apply(res_model_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+10,7,i]<-length(which(final_res0k@data@values==2)) #area do modelo
          
          #raster riqueza
          Sraster_res0k@layers[[j]]<-(merge(final_res0k/2, america_rst0))+Sraster_res0k@layers[[j]]
          
          
          
          # predict rcp 26    
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_res[j]), "_","26","res", sep=""))  
          
          clima_26res<-clima_residencia[[20:38]]
          names(clima_26res)<-names(clima_residencia[[1:19]])
          res_model26<-predict(map_res,clima_26res)
          final_res26<-crop(reclassify(res_model26, c(0,adequab_res,0,adequab_res,+Inf,1))*2, america_rst0)
          
          # localizaçao, centroide e area
          res_model26_point<-rasterToPoints(final_res26)
          res_model26_point<-matrix(res_model26_point[res_model26_point[,3]==1,c(1:2)], ncol=2)
          
          if(nrow(res_model26_point)>0){
            resultados_spp[(j-1)*9+11,c(1:4),i]<- c(apply(res_model26_point, 2, min),apply(res_model26_point, 2, max))#lat e long max e min
            resultados_spp[(j-1)*9+11,c(5,6),i]<- apply(res_model26_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+11,7,i]<-length(which(final_res26@data@values==1)) #area do modelo
          
          #sobreposicao do range 26 x 0k
          sobreposicao_res26<-final_res0k+final_res26
          resultados_spp[(j-1)*9+11,10,i]<-length(which(sobreposicao_res26@data@values==1))/length(which(final_res0k@data@values==2))
          resultados_spp[(j-1)*9+11,11,i]<-length(which(sobreposicao_res26@data@values==2))/length(which(final_res0k@data@values==2))
          resultados_spp[(j-1)*9+11,12,i]<-length(which(sobreposicao_res26@data@values==3))/length(which(final_res0k@data@values==2))
          
          #raster riqueza
          Sraster_res26@layers[[j]]<-(merge(final_res26, america_rst0))+Sraster_res26@layers[[j]]
          
          
          
          # predict rcp 85
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_res[j]), "_","85","res", sep=""))
          
          clima_85res<-clima_residencia[[39:57]]
          names(clima_85res)<-names(clima_residencia[[1:19]])
          res_model85<-predict(map_res,clima_85res)
          final_res85<-crop(reclassify(res_model85, c(0,adequab_res,0,adequab_res,+Inf,1))*2, america_rst0)
          
          # localizaçao, centroide e area
          res_model85_point<-rasterToPoints(final_res85)
          res_model85_point<-matrix(res_model85_point[res_model85_point[,3]==1,c(1:2)], ncol=2)
          
          if(nrow(res_model85_point)>0){
            resultados_spp[(j-1)*9+12,c(1:4),i]<- c(apply(res_model85_point, 2, min),apply(res_model85_point, 2, max))#lat e long max e min
            resultados_spp[(j-1)*9+12,c(5,6),i]<- apply(res_model85_point,2,median) #centroide
          }
          resultados_spp[(j-1)*9+12,7,i]<-length(which(final_res85@data@values==1)) #area do modelo
          
          #sobreposicao do range 85 x 0k
          sobreposicao_res85<-final_res0k+final_res85
          resultados_spp[(j-1)*9+12,10,i]<-length(which(sobreposicao_res85@data@values==1))/length(which(final_res0k@data@values==2))
          resultados_spp[(j-1)*9+12,11,i]<-length(which(sobreposicao_res85@data@values==2))/length(which(final_res0k@data@values==2))
          resultados_spp[(j-1)*9+12,12,i]<-length(which(sobreposicao_res85@data@values==3))/length(which(final_res0k@data@values==2))
          
          #raster riqueza
          Sraster_res85@layers[[j]]<-(merge(final_res85, america_rst0))+Sraster_res85@layers[[j]]
          
          
          
          writeRaster(stack(final_res0k, final_res26, final_res85), paste("./mapas/", gsub(".shp", "", shapes[i]), "_",gsub(".grd", "", clima_res[j]), "_","res", sep=""),overwrite=TRUE)
          rm(clima_residencia, residencia_rst2, data_new_res, map_res, res_model, adequab_res, final_res0k, validate_resid, res_model_point,
             clima_26res, res_model26,final_res26, res_model26_point, clima_85res,  res_model85, final_res85, res_model85_point)
          
        }
      }
    }
    rm(recorte)
  }
  
  Sraster_rep<-stack(Sraster_rep0k,Sraster_rep26, Sraster_rep85)
  names(Sraster_rep)<-paste(rep(c("CCSM","FGOALS", "GISS", "IPSL", "MIROC", "MRI" ), times=3), "_", rep(c("0k","26","85"), each=6), sep="")
  
  Sraster_inv<- stack(Sraster_inv0k, Sraster_inv26, Sraster_inv85)
  names(Sraster_inv)<-paste(rep(c("CCSM","FGOALS", "GISS", "IPSL", "MIROC", "MRI" ), times=3), "_", rep(c("0k","26","85"), each=6), sep="")
  
  Sraster_res<-stack(Sraster_res0k, Sraster_res26, Sraster_res85)
  names(Sraster_res)<-paste(rep(c("CCSM","FGOALS", "GISS", "IPSL", "MIROC", "MRI" ), times=3), "_", rep(c("0k","26","85"), each=6), sep="")
  
  
  return(list(resultados_spp=resultados_spp, Sraster_rep=Sraster_rep, Sraster_inv=Sraster_inv, Sraster_res=Sraster_res))
  
}


Maraísa Braga
