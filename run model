aves_migratorias
================
#rodar a funcao

library(letsR)
library(maptools)
library (maps)
library (raster)
library (rgdal)
library(rgeos)
library (sqldf)
library (tcltk2)
library (testthat)
library(biomod2)

run_RF_model<-function(shapes, PA, clima_presente, clima_futuro){
  setwd("/media/leo/TATIANE 1/var0k_Rep_Inv/rep") 
  var_i<-stack(clima_presente)
  var_i@crs<-PA$Richnes$layer@crs
  wc<-var_i
  dados<-PA$Presenc
  colnames(dados)=gsub(" ", "_", colnames(dados))
   
  coord_finalRep_pres<- list ()
  for (i in 3:ncol(dados)){
    coord<- dados [dados[,i]==1, 1:2]
    data<- extract (wc, coord)
    data<- as.data.frame (data)
    coord_new<- envSample (coord, filters=list (data$bio.10, data$bio.18), 
                           res=list (2, 100), do.plot=T)
    coord_finalRep_pres[[i-2]]<- coord_new
  }
  
  names(coord_finalRep_pres)<-colnames(dados)[-c(1:2)]
  coord_finalRep_absence<- list () 
  setwd("/media/leo/TATIANE 1/RF_testes/rep")
 
  for(i in 1:length(coord_finalRep_pres)){
  if (nrow(coord_finalRep_pres[[i]])>10){
    
      ler_i<-readShapePoly(shapes[names(coord_finalRep_pres[i])==gsub(".shp", "",shapes)])   
      buf_i<-gBuffer(ler_i, byid=F, width=5)  
      buf_raster<-mask(long_lat_raster, buf_i) 
      buf_raster<-mask(buf_raster, neotropical) 
      
      ler_i_raster<- rasterize (ler_i, long_lat_raster) 
      buf_raster<- mask (buf_raster, ler_i_raster, inverse=T) 
      buf_coord<-rasterToPoints(buf_raster)  
      
      #fazer o envSample dos pontos de ausencia
      coord<- buf_coord [,1:2]
      wc<-var_i
      data<- extract (wc, coord) 
      data<- as.data.frame (data)
      coord_new<- envSample (coord, filters=list (data$bio.10, data$bio.18), res=list (2, 100), do.plot=T)
      
      coord_finalRep_absence[[i]]<- coord_new
      
   }}
    names(coord_finalRep_absence)<-names(coord_finalRep_pres)
    pres_aus_Final<-as.data.frame(rbind(coord_finalRep_pres, coord_finalRep_absence))
    

    for(j in 1(lenght(clima_futuro))){
      setwd("/media/leo/TATIANE 1/varfut_Rep_Inv/rep")
      var_j<-stack(clima_futuro[i])
      var_j@crs<-PA$Richnes$layer@crs
          
      #rodar o modelo
      modelo_RF<-RF_model(coord_spp = pres_aus_Final, 
               myExpl = var_i, 
               myExplFut = var_j)
    }
}

#areas de reproducao, modelo CCSM

setwd("/media/leo/TATIANE 1/scrip_aves_migratorias")
long_lat_raster<-raster("raster_1g")
neotropical<-readShapePoly("Neotropical.shp")

#shapes
setwd("/media/leo/TATIANE 1/RF_testes/rep")
shapes_Rep<-dir(pattern=".shp")

#clima presente
setwd("/media/leo/TATIANE 1/var0k_Rep_Inv/rep") 
patt1 <- ".*CCSM.*grd.*"
CCSM_pres<-dir(pattern = patt1) 

#clima futuro
setwd("/media/leo/TATIANE 1/varfut_Rep_Inv/rep")
patt2 <- ".*CCSM.*grd.*"
CCSM_fut<-dir(pattern = patt2) 
rm(patt1, patt2)

CCSM_Rep<-run_RF_model(shapes = shapes_Rep, 
                       PA = PA_rep_teste, 
                       clima_presente = CCSM_pres, 
                       clima_futuro = CCSM_fut)


#Emsamble dos diferentes modelos climáticos para cada cenário (2.6 e 8.5)
#calculo dos midPoints
#areas de invernada, modelo CCSM
...
#calculo das distancias
