library (SDMTools)
library (raster)
library (dismo)
library (rgdal)
library(maptools)
library(outliers)
library(rgeos)

###Funcao###

run_Bioclim_model<-function(shapes, clima_JJA, clima_DJF, clima_anual){
  resultados_spp<- array(dim=c(57,10,77))
  dimnames(resultados_spp)[[3]]<-gsub(".shp", "", shapes)
  dimnames(resultados_spp)[[2]]<-c("long_min","lat","long_max","lat","midpoint_x", "midpoint_y","n_cells", "acerto", "sobrepredicao", "adequabil_corte")
  dimnames(resultados_spp)[[1]]<-nomes_linhas_modelo4[,1]
  
  for(i in 1:length(shapes)){
    paxaro<- readShapePoly (shapes[i], delete_null_obj=TRUE)
    reproduccion<-breeding_birds(paxaro)
    if(!is.null(reproduccion)){
      reproduccion<-gUnaryUnion(reproduccion)}
    invernada<- nonbreeding_birds(paxaro) 
    if(!is.null(invernada)){
      invernada<-gUnaryUnion(invernada)}
    residencia<-resident_birds(paxaro)
    if(!is.null(residencia)){
      residencia<-gUnaryUnion(residencia)} 
    
    print(shapes[i])
    
    # latitude e longitude min e max dos shapes
    if(!is.null(reproduccion)){
      reproduccion_rst<-rasterize(reproduccion, americas_rst)
      reproduccion_point<-rasterToPoints(reproduccion_rst)
      if(nrow(reproduccion_point)>0){
        resultados_spp[1,c(1:4),i]<- c(apply(reproduccion_point[,c(1:2)], 2, min),apply(reproduccion_point[,c(1:2)], 2, max))
        resultados_spp[1,7,i]<-nrow(reproduccion_point)
        resultados_spp[1,c(5,6),i]<- apply(reproduccion_point[,c(1:2)],2,mean)
      }    
    }
    
    if(!is.null(invernada)){
      invernada_rst<-rasterize(invernada, americas_rst )
      invernada_point<-rasterToPoints(invernada_rst)
      if(nrow(invernada_point)>0){
        resultados_spp[2,c(1:4),i]<- c(apply(invernada_point[,c(1:2)], 2, min),apply(invernada_point[,c(1:2)], 2, max))
        resultados_spp[2,7,i]<-nrow(invernada_point)
        resultados_spp[2,c(5,6),i]<- apply(invernada_point[,c(1:2)],2,mean)
      }
    }
    
    
    if(!is.null(residencia) ){
      residencia_rst<-rasterize(residencia, americas_rst )
      residencia_point<-rasterToPoints(residencia_rst)
      if(nrow(residencia_point)>0){
        resultados_spp[3,c(1:4),i]<- c(apply(residencia_point[,c(1:2)], 2, min),apply(residencia_point[,c(1:2)], 2, max))
        resultados_spp[3,7,i]<-nrow(residencia_point)
        resultados_spp[3,c(5,6),i]<- apply(residencia_point[,c(1:2)],2,mean)
      }
    }
    
    ### Modelos climaticos ###
    clima<-cbind(clima_JJA, clima_DJF, clima_anual)
    
    if (is.na(spp_hem[i,2])){ 
      clima_inv<-clima[,1]
      clima_res<-clima[,3]      
    }
    
    if(spp_hem[i,2]=="sul" & !is.na(spp_hem[i,2])){ 
      clima_rep<-clima[,2]
      clima_inv<-clima[,1]
      clima_res<-clima[,3]
      recorte<-sudamerica
    }
    if(spp_hem[i,2]=="sul_norte" & !is.na(spp_hem[i,2])){ 
      clima_rep<-clima[,2]
      clima_inv<-clima[,1]
      clima_res<-clima[,3]
      recorte<-sudamerica
    }
    
    if(spp_hem[i,2]=="norte" & !is.na(spp_hem[i,2])){ 
      clima_rep<-clima[,1]
      clima_inv<-clima[,2]
      clima_res<-clima[,3]    
      recorte<-northamerica
    }
    
    
    
    for(j in 1:nrow(clima)){
      
      # modelo area de reproducao #
      if(!is.null(reproduccion)){
        if(nrow(reproduccion_point)>0){
          
          clima_reproducao<-brick(clima_rep[j])
          
          #0k
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_rep[j]),"_", "0k","REP", sep=""))
          
          reproduccion_rst2<-merge(crop(reproduccion_rst, recorte), recorte)
          # nicho climatico
          data_new_rep<-eliminate_outliers(climate=clima_reproducao, distribution=reproduccion)
          map_rep<- bioclim (data_new_rep)
          rep_model<-predict(clima_reproducao[[c(1:23)]], map_rep)
          adequab_rep <- optimise(reclass_rep, interval = c(0,max(rep_model@data@values, na.rm=T)), obj_model=rep_model, shape_rst=reproduccion_rst2, cortar_rep=recorte)$minimum
          
          final_rep0k<-crop(reclassify(rep_model, c(0,adequab_rep,0,adequab_rep,+Inf,1))*2, recorte)
          validate_repro<-reproduccion_rst2+final_rep0k
          
          ## validacao area de reproducao
          #performance do modelo: acerto, sobrepredicao e corte de adequabilidade 
          resultados_spp[(j-1)*9+4,8,i]<-  length(which(validate_repro@data@values==3))/length(which(reproduccion_rst2@data@values==1))
          resultados_spp[(j-1)*9+4,9,i]<- length(which(validate_repro@data@values==2))/length(which(reproduccion_rst2@data@values==1))
          resultados_spp[(j-1)*9+4,10,i]<- adequab_rep
          
          #localizaçao, centroide e area
          rep_model_point<-rasterToPoints(final_rep0k)
          rep_model_point<-matrix(rep_model_point[rep_model_point[,3]==2,1:2],ncol=2)
          
          if(nrow(rep_model_point)>0){
          # latitude e longitude e longitude min e max
            resultados_spp[(j-1)*9+4,c(1:4),i]<- c(apply(rep_model_point, 2, min),apply(rep_model_point, 2, max))
            #centroide da area de reproducao 0k
            resultados_spp[(j-1)*9+4,c(5,6),i]<- apply(rep_model_point,2,mean)
          }
          #area do modelo
          resultados_spp[(j-1)*9+4,7,i]<-length(which(final_rep0k@data@values==2))
          
          
          
          # predict rcp 26    
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_rep[j]), "_","26","REP", sep=""))  
          
          clima_26rep<-clima_reproducao[[24:46]]
          names(clima_26rep)<-names(clima_reproducao[[1:23]])
          rep_model26<-predict(map_rep,clima_26rep)
          final_rep26<-crop(reclassify(rep_model26, c(0,adequab_rep,0,adequab_rep,+Inf,1))*2, recorte)
          
          #localizaçao, centroide e area
          rep_model26_point<-rasterToPoints(final_rep26)
          rep_model26_point<-matrix(rep_model26_point[rep_model26_point[,3]==2,c(1:2)],ncol=2)
          
          if(nrow(rep_model26_point)>0){
          # latitude e longitude max e min
            resultados_spp[(j-1)*9+5,c(1:4),i]<- c(apply(rep_model26_point, 2, min),apply(rep_model26_point, 2, max))
            # centroide da area de reproducao 26
            resultados_spp[(j-1)*9+5,c(5,6),i]<- apply(rep_model26_point,2,mean)
          }
          # area do modelo
          resultados_spp[(j-1)*9+5,7,i]<-length(which(final_rep26@data@values==2))
          
          
          # predict rcp 85
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_rep[j]), "_","85","REP", sep=""))
          
          clima_85rep<-clima_reproducao[[47:69]]
          names(clima_85rep)<-names(clima_reproducao[[1:23]])
          rep_model85<-predict(map_rep,clima_85rep)
          final_rep85<-crop(reclassify(rep_model85, c(0,adequab_rep,0,adequab_rep,+Inf,1))*2, recorte)
          rep_model85_point<-rasterToPoints(final_rep85)
          rep_model85_point<-matrix(rep_model85_point[rep_model85_point[,3]==2,c(1:2)],ncol=2)
          
          if(nrow(rep_model85_point)>0){
            # latitude e longitude max e min
            resultados_spp[(j-1)*9+6,c(1:4),i]<- c(apply(rep_model85_point, 2, min),apply(rep_model85_point, 2, max))
            #centroide da area de reproducao 85
            resultados_spp[(j-1)*9+6,c(5,6),i]<- apply(rep_model85_point,2,mean)
          }
          
          # area da area de reproducao 85 
          resultados_spp[(j-1)*9+6,7,i]<-length(which(final_rep85@data@values==2))
          
          writeRaster(stack(final_rep0k, final_rep26, final_rep85), paste("./mapas/", gsub(".shp", "", shapes[1]), "_",gsub(".grd", "", clima_rep[1]), "_","REP", sep=""),overwrite=TRUE)
          rm(clima_reproducao, reproduccion_rst2, data_new_rep, map_rep, rep_model, adequab_rep, final_rep0k, validate_repro, rep_model_point,
             clima_26rep, rep_model26,final_rep26, rep_model26_point, clima_85rep,  rep_model85, final_rep85, rep_model85_point)
        }
      }
      
      
      
      
      
      ##### Modelo area de invernada #####
      if(!is.null(invernada)){
        if( nrow(invernada_point)>0){
          clima_invernada<-brick(clima_inv[j])   
          
          # 0k
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_inv[j]),"_","0k","INV", sep=""))
          
          invernada_rst2<-merge(invernada_rst,america_rst0)
          # nicho climatico
          data_new_inv<-eliminate_outliers(climate=clima_invernada, distribution=invernada)
          map_inv<- bioclim (data_new_inv)
          inv_model<-predict(map_inv,clima_invernada[[1:25]])
          adequab_inv <- optimise(reclass,interval = c(0,max(inv_model@data@values, na.rm=T)),obj_model=inv_model,shape_rst=invernada_rst2, cortar=america_rst0)$minimum
          final_inv0k<-crop(reclassify(inv_model, c(0,adequab_inv,0,adequab_inv,+Inf,1))*2, america_rst0)
          
          # validacao area de invernada
          validate_inv<-invernada_rst2+final_inv0k
          
          # performance do modelo: acertos e sobrepredicao
          resultados_spp[(j-1)*9+7,8,i]<-  length(which(validate_inv@data@values==3))/length(which(invernada_rst2@data@values==1))
          resultados_spp[(j-1)*9+7,9,i]<- length(which(validate_inv@data@values==2))/length(which(invernada_rst2@data@values==1))
          resultados_spp[(j-1)*9+7,10,i]<-adequab_inv
          
          #localizaçao, centroide e area
          inv_model_point<-rasterToPoints(final_inv0k)
          inv_model_point<-matrix(inv_model_point[inv_model_point[,3]==2,c(1:2)],ncol=2)
          if(nrow(inv_model_point)>0){
          # latitude e longitude max e min
            resultados_spp[(j-1)*9+7,c(1:4),i]<- c(apply(inv_model_point, 2, min),apply(inv_model_point, 2, max))
            # centroide da area de invernada 0k
            resultados_spp[(j-1)*9+7,c(5,6),i]<- apply(inv_model_point,2,median)
          }
          # area do modelo
          resultados_spp[(j-1)*9+7,7,i]<-length(which(final_inv0k@data@values==2))
          
          #predict rcp 26    
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_inv[j]), "_","26","INV", sep=""))
          
          clima_26inv<-clima_invernada[[24:46]]
          names(clima_26inv)<-names(clima_invernada[[1:23]])
          inv_model26<-predict(map_inv,clima_26inv)
          final_inv26<-crop(reclassify(inv_model26, c(0,adequab_inv,0,adequab_inv,+Inf,1))*2, america_rst0)
          
          inv_model26_point<-rasterToPoints(final_inv26)
          inv_model26_point<-matrix(inv_model26_point[inv_model26_point[,3]==2,c(1:2)],ncol=2)
          
          if(nrow(inv_model26_point)>0){
            # latitude e longitude max e min
            resultados_spp[(j-1)*9+8,c(1:4),i]<- c(apply(inv_model26_point, 2, min),apply(inv_model26_point, 2, max))
            # centroide da area de invernada 26
            resultados_spp[(j-1)*9+8,c(5,6),i]<- apply(inv_model26_point,2,mean)
          }
          # area do modelo
          resultados_spp[(j-1)*9+8,7,i]<-length(which(final_inv26@data@values==2))
          
          
          
          #predict rcp 85
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_inv[j]), "_","85","INV", sep=""))
          
          clima_85inv<-clima_invernada[[47:69]]
          names(clima_85inv)<-names(clima_invernada[[1:23]])
          inv_model85<-predict(map_inv,clima_85inv)
          final_inv85<-crop(reclassify(inv_model85, c(0,adequab_inv,0,adequab_inv,+Inf,1))*2, america_rst0)
          
          inv_model85_point<-rasterToPoints(final_inv85)
          inv_model85_point<- matrix(inv_model85_point[inv_model85_point[,3]==2,c(1:2)], ncol=2)
          
          if(!is.null(dim(inv_model85_point))){
            # latitude e longitude max e min
            resultados_spp[(j-1)*9+9,c(1:4),i]<- c(apply(inv_model85_point, 2, min),apply(inv_model85_point, 2, max))
            # centroide da area de invernada 85
            resultados_spp[(j-1)*9+9,c(5:6),i]<- apply(inv_model85_point,2,mean)
          }     
          
          # area do modelo
          resultados_spp[(j-1)*9+9,7,i]<-length(which(final_inv85@data@values==2))
          
          
          writeRaster(stack(final_inv0k, final_inv26, final_inv85), paste("./mapas/",gsub(".shp", "", shapes[i]), "_",gsub(".grd", "", clima_inv[j]), "_","INV", sep=""),overwrite=TRUE)
          rm(clima_invernada, invernada_rst2, data_new_inv, map_inv, inv_model, adequab_inv, final_inv0k, validate_inv, inv_model_point,
             clima_26inv, inv_model26,final_inv26, inv_model26_point, clima_85inv,  inv_model85, final_inv85, inv_model85_point)
        }
      }
      
      
      
      ##### modelo area de residencia #####
      if(!is.null(residencia)){
        if(nrow(residencia_point)>0){
          clima_residencia<-brick(clima_res[j])
          
          #0k
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_res[j]),"_", "0k","res", sep=""))
          
          residencia_rst2<-merge(residencia_rst, america_rst0)
          # nicho climatico
          data_new_res<-eliminate_outliers_res(climate=clima_residencia, distribution=residencia)
          map_res<- bioclim (data_new_res)
          res_model<-predict(clima_residencia[[c(1:19)]], map_res)
          adequab_res <- optimise(reclass,interval = c(0,max(res_model@data@values, na.rm=T)),obj_model=res_model,shape_rst=residencia_rst2, cortar=america_rst0)$minimum
          final_res0k<-crop(reclassify(res_model, c(0,adequab_res,0,adequab_res,+Inf,1))*2, america_rst0)
          
          # validacao area de residencia
          validate_resid<-residencia_rst2+final_res0k
          
          #performance do modelo: acertos e sobresredicao
          resultados_spp[(j-1)*9+10,8,i]<-  length(which(validate_resid@data@values==3))/length(which(residencia_rst2@data@values==1))
          resultados_spp[(j-1)*9+10,9,i]<- length(which(validate_resid@data@values==2))/length(which(residencia_rst2@data@values==1))
          resultados_spp[(j-1)*9+10,10,i]<-adequab_res
          
          res_model_point<-rasterToPoints(final_res0k)
          res_model_point<-matrix(res_model_point[res_model_point[,3]==2,1:2], ncol=2)
          
          if(nrow(res_model_point)>0){
          # latitude e longitude e longitude min e max
            resultados_spp[(j-1)*9+10,c(1:4),i]<- c(apply(res_model_point, 2, min),apply(res_model_point, 2, max))
            #centroide da area de residencia 0k
            resultados_spp[(j-1)*9+10,c(5,6),i]<- apply(res_model_point,2,mean)
          }
          
          #area do modelo
          resultados_spp[(j-1)*9+10,7,i]<-length(which(final_res0k@data@values==2))
          
          
          
          # predict rcp 26    
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_res[j]), "_","26","res", sep=""))  
          
          clima_26res<-clima_residencia[[20:38]]
          names(clima_26res)<-names(clima_residencia[[1:19]])
          res_model26<-predict(map_res,clima_26res)
          final_res26<-crop(reclassify(res_model26, c(0,adequab_res,0,adequab_res,+Inf,1))*2, america_rst0)
          
          res_model26_point<-rasterToPoints(final_res26)
          res_model26_point<-matrix(res_model26_point[res_model26_point[,3]==2,c(1:2)], ncol=2) 
          
          if(nrow(res_model26_point)>0){
          # latitude e longitude max e min
            resultados_spp[(j-1)*9+11,c(1:4),i]<- c(apply(res_model26_point, 2, min),apply(res_model26_point, 2, max))
            # centroide da area de residencia 26
            resultados_spp[(j-1)*9+11,c(5,6),i]<- apply(res_model26_point,2,mean)
          }
          # area do modelo
          resultados_spp[(j-1)*9+11,7,i]<-length(which(final_res26@data@values==2))
          
          # predict rcp 85
          print(paste(gsub(".shp", "", shapes[i]), "_", gsub(".grd", "", clima_res[j]), "_","85","res", sep=""))
          
          clima_85res<-clima_residencia[[39:57]]
          names(clima_85res)<-names(clima_residencia[[1:19]])
          res_model85<-predict(map_res,clima_85res)
          final_res85<-crop(reclassify(res_model85, c(0,adequab_res,0,adequab_res,+Inf,1))*2, america_rst0)
          
          res_model85_point<-rasterToPoints(final_res85)
          res_model85_point<-matrix(res_model85_point[res_model85_point[,3]==2,c(1:2)], ncol=2)
          
          if(nrow(res_model85_point)>0){
            # latitude e longitude max e min
            resultados_spp[(j-1)*9+12,c(1:4),i]<- c(apply(res_model85_point, 2, min),apply(res_model85_point, 2, max))
            #centroide da area de residencia 85
            resultados_spp[(j-1)*9+12,c(5,6),i]<- apply(res_model85_point,2,mean)
          }
          
          
          # area da area de residencia 85 
          resultados_spp[(j-1)*9+12,7,i]<-length(which(final_res85@data@values==2))
          
          
          writeRaster(stack(final_res0k, final_res26, final_res85), paste("./mapas/", gsub(".shp", "", shapes[i]), "_",gsub(".grd", "", clima_res[j]), "_","res", sep=""),overwrite=TRUE)
          rm(clima_residencia, residencia_rst2, data_new_res, map_res, res_model, adequab_res, final_res0k, validate_resid, res_model_point,
             clima_26res, res_model26,final_res26, res_model26_point, clima_85res,  res_model85, final_res85, res_model85_point)
          
        }     
      }
    }
    rm(recorte)
  }
  return(resultados_spp)
}
